<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.spidertracks.datanucleus</groupId>
	<artifactId>cassandra</artifactId>
	<version>0.5.5-SNAPSHOT</version>
	<properties>
		<datanucleus.version>2.1.1</datanucleus.version>
		<datanucleus.plugin.version>2.1.0-release</datanucleus.plugin.version>
		<cassandra.version>0.7.0-beta2-SNAPSHOT</cassandra.version>
		<thrift.version>959516</thrift.version>
		<pelops.version>0.906-0.7.0-st-SNAPSHOT</pelops.version>
		<slf4j.version>1.6.1</slf4j.version>
		<avro.version>1.4.0-fixes</avro.version>
		<st.deploy.dir>file://${basedir}/../mvnrepo</st.deploy.dir>
	</properties>
	<repositories>

		<repository>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>interval:30</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
			<id>eaio.com</id>
			<name>eaio.com repository</name>
			<url>http://eaio.com/maven2</url>
		</repository>
		<repository>
			<id>DN_M2_Repo</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
		</repository>
		<repository>
			<id>maven.scale7.org</id>
			<name>Scale7 Maven Repo</name>
			<url>http://github.com/s7/mvnrepo/raw/master</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven.spidertracks.com</id>
			<name>Spidertracks Maven Repo</name>
			<url>http://github.com/tnine/m2repo/raw/master</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>


	</repositories>

	<dependencies>
		<!-- used as per cassandra's recommended UUID generation http://johannburkard.de/software/uuid/ -->
		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo2-api</artifactId>
			<version>[2.3-ec, 3.0)</version>
		</dependency>



		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>${datanucleus.version}</version>
		</dependency>

		<dependency>
			<groupId>org.scale7</groupId>
			<artifactId>scale7-pelops</artifactId>
			<version>${pelops.version}</version>
		</dependency>

		<dependency>
			<groupId>libthrift</groupId>
			<artifactId>libthrift</artifactId>
			<version>${thrift.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cassandra</groupId>
			<artifactId>cassandra</artifactId>
			<version>${cassandra.version}</version>
		</dependency>



		<!-- test dependencies -->

		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-enhancer</artifactId>
			<version>${datanucleus.plugin.version}</version>
			<type>jar</type>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.datanucleus</groupId>
					<artifactId>datanucleus-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>3.0.2.RELEASE</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.collections</groupId>
			<artifactId>google-collections</artifactId>
			<version>1.0</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>high-scale-lib</groupId>
			<artifactId>high-scale-lib</artifactId>
			<version>1.1.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.reardencommerce</groupId>
			<artifactId>clhm-production</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.scale7</groupId>
			<artifactId>scale7-pelops</artifactId>
			<version>${pelops.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>1.6</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>r05</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.avro</groupId>
			<artifactId>avro</artifactId>
			<version>1.4.0-fixes</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>6.1.22</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.safehaus.jug</groupId>
			<artifactId>jug-asl</artifactId>
			<version>2.0.0</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.safehaus.jug</groupId>
			<artifactId>jug</artifactId>
			<version>2.0.0</version>
			<classifier>asl</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.4.0</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.4.0</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<scm>
		<connection>scm:git:http://github.com/tnine/Datanucleus-Cassandra-Plugin.git</connection>
		<developerConnection>scm:git:ssh://github.com/tnine/Datanucleus-Cassandra-Plugin.git</developerConnection>
		<url>http://github.com/tnine/Datanucleus-Cassandra-Plugin</url>
	</scm>
	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>


			<!-- only want to enhance classes that are within our test classes -->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>${datanucleus.plugin.version}</version>
				<configuration>
					<metadataDirectory>${project.build.testOutputDirectory}
					</metadataDirectory>
					<mappingIncludes>**/model/*.class</mappingIncludes>
					<log4jConfiguration>${basedir}/src/test/resources/log4j.properties
					</log4jConfiguration>
					<verbose>true</verbose>
					<enhancerName>ASM</enhancerName>
					<!-- <props>${basedir}/datanucleus.properties</props> -->

				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>${datanucleus.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>process-test-classes</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- do not remove this configuration! Required to fork each test in 
					it's own thread otherwise the embedded cassandra causes the tests to hang -->
				<configuration>
					<forkMode>always</forkMode>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>install libthrift</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>libthrift</groupId>
							<artifactId>libthrift</artifactId>
							<version>${thrift.version}</version>
							<file>${basedir}/lib/libthrift-r${thrift.version}.jar</file>
						</configuration>
					</execution>
					<execution>
						<id>install cassandra</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>org.apache.cassandra</groupId>
							<artifactId>cassandra</artifactId>
							<version>${cassandra.version}</version>
							<file>${basedir}/lib/apache-cassandra-${cassandra.version}.jar</file>
						</configuration>
					</execution>
					<execution>
						<id>install avro</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>org.apache.avro</groupId>
							<artifactId>avro</artifactId>
							<version>${avro.version}</version>
							<file>${basedir}/lib/avro-${avro.version}.jar</file>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- deploy the thrift binarie -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<execution>
						<id>deploy libthrift</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>libthrift</groupId>
							<artifactId>libthrift</artifactId>
							<version>${thrift.version}</version>
							<file>${basedir}/lib/libthrift-r${thrift.version}.jar</file>
						</configuration>
					</execution>
					<execution>
						<id>deploy cassandra</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>org.apache.cassandra</groupId>
							<artifactId>cassandra</artifactId>
							<version>${cassandra.version}</version>
							<file>${basedir}/lib/apache-cassandra-${cassandra.version}.jar</file>
						</configuration>
					</execution>
					<execution>
						<id>deploy avro</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<groupId>org.apache.avro</groupId>
							<artifactId>avro</artifactId>
							<version>${avro.version}</version>
							<file>${basedir}/lib/avro-${avro.version}.jar</file>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<distributionManagement>
		<repository>
			<id>maven.st.org.local</id>
			<name>Deployment Staging Area</name>
			<!-- The ${scale7.deploy.dir} is defined in your ~/.m2/settings.xml file 
				and it should point to the directory that contains the clone of http://github.com/s7/mvnrepo. 
				e.g. file:///Users/dan/Development/Projects/scale7/mvnrepo -->
			<url>${st.deploy.dir}</url>
			<layout>default</layout>
		</repository>
	</distributionManagement>
</project>
